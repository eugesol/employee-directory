{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eugen\\\\Desktop\\\\GT-Coding\\\\Homework\\\\employee-directory\\\\employee-directory\\\\src\\\\components\\\\Pages\\\\Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Container from \"../Container\";\nimport Table from \"../Table\";\nimport API from \"../../utils/API\";\nimport TableItem from \"../TableItem\";\nimport SearchForm from \"../SearchForm\";\n\nfunction Home() {\n  // Set up our stateful components\n  const [results, setResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [caret, setCaret] = useState(\"up\"); // Retreive our employee list from our api\n\n  useEffect(() => {\n    API.getAll().then(res => setResults(res.data.results)).catch(err => console.log(err));\n  }, []); // Filter through our results for those that match our search component\n\n  useEffect(() => {\n    setSearchResults(results.filter(employee => {\n      let name = `${employee.name.first} ${employee.name.last}`;\n      return name.toLowerCase().includes(search) || employee.email.toLowerCase().includes(search) || employee.cell.includes(search);\n    }));\n  }, [results, search]); // take in search results on input change\n\n  const handleInputChange = event => {\n    setSearch(event.target.value);\n  }; // Run our Sorting functions and change direction of caret on click\n\n\n  const handleOnClick = () => {\n    if (caret === \"down\") {\n      setCaret(\"up\");\n      sortDecending();\n    } else {\n      setCaret(\"down\");\n      sortAcending();\n    }\n  }; // Sorting functions\n\n\n  const sortAcending = () => {\n    setSearchResults(searchResults.sort((a, b) => a.name.last > b.name.last ? 1 : -1));\n  };\n\n  const sortDecending = () => {\n    setSearchResults(searchResults.sort((a, b) => a.name.last < b.name.last ? 1 : -1));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchForm, {\n    search: search,\n    handleInputChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    caretDir: caret,\n    handleOnClick: handleOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, searchResults.map(employee => /*#__PURE__*/React.createElement(TableItem, {\n    key: employee.id.value,\n    image: employee.picture.medium,\n    name: employee.name.first + \" \" + employee.name.last,\n    phone: employee.cell,\n    email: employee.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/eugen/Desktop/GT-Coding/Homework/employee-directory/employee-directory/src/components/Pages/Home.js"],"names":["React","useState","useEffect","Container","Table","API","TableItem","SearchForm","Home","results","setResults","searchResults","setSearchResults","search","setSearch","caret","setCaret","getAll","then","res","data","catch","err","console","log","filter","employee","name","first","last","toLowerCase","includes","email","cell","handleInputChange","event","target","value","handleOnClick","sortDecending","sortAcending","sort","a","b","map","id","picture","medium"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Container from \"../Container\";\r\nimport Table from \"../Table\";\r\nimport API from \"../../utils/API\";\r\nimport TableItem from \"../TableItem\";\r\nimport SearchForm from \"../SearchForm\";\r\n\r\nfunction Home() {\r\n  // Set up our stateful components\r\n  const [results, setResults] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [caret, setCaret] = useState(\"up\");\r\n\r\n // Retreive our employee list from our api\r\n  useEffect(() => {\r\n    API.getAll()\r\n      .then((res) => setResults(res.data.results))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  // Filter through our results for those that match our search component\r\n  useEffect(() => {\r\n    setSearchResults(\r\n      results.filter((employee) => {\r\n        let name = `${employee.name.first} ${employee.name.last}`;\r\n        return (\r\n          name.toLowerCase().includes(search) ||\r\n          employee.email.toLowerCase().includes(search) ||\r\n          employee.cell.includes(search)\r\n        );\r\n      })\r\n    );\r\n  }, [results, search]);\r\n\r\n  // take in search results on input change\r\n  const handleInputChange = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  // Run our Sorting functions and change direction of caret on click\r\n  const handleOnClick = () => {\r\n    if (caret === \"down\") {\r\n      setCaret(\"up\");\r\n      sortDecending();\r\n    } else {\r\n      setCaret(\"down\");\r\n      sortAcending();\r\n    }\r\n  };\r\n  \r\n  // Sorting functions\r\n  const sortAcending = () => {\r\n    setSearchResults(\r\n      searchResults.sort((a, b) => (a.name.last > b.name.last ? 1 : -1))\r\n    );\r\n  };\r\n  const sortDecending = () => {\r\n    setSearchResults(\r\n      searchResults.sort((a, b) => (a.name.last < b.name.last ? 1 : -1))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchForm search={search} handleInputChange={handleInputChange} />\r\n      <Container>\r\n        <Table caretDir={caret} handleOnClick={handleOnClick}>\r\n          {searchResults.map((employee) => (\r\n            <TableItem\r\n              key={employee.id.value}\r\n              image={employee.picture.medium}\r\n              name={employee.name.first + \" \" + employee.name.last}\r\n              phone={employee.cell}\r\n              email={employee.email}\r\n            />\r\n          ))}\r\n        </Table>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}